<dxlc:Tile x:Class="ICPartners.DevxUI.UserControls.CustomTile2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICPartners.DevxUI.UserControls"
             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
           xmlns:core="http://schemas.devexpress.com/winfx/2008/xaml/core"
           mc:Ignorable="d" 
           
            >
    <dxlc:Tile.Resources>

        <Style TargetType="local:CustomTile2">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:CustomTile2">
                        <Border Name="root" Padding="5" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5" core:FrameworkElementHelper.IsClipped="True" CornerRadius="8">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="Pressed" GeneratedDuration="0:0:0.1"/>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>

                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="(RenderTransform).ScaleX" To="0.97" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="(RenderTransform).ScaleY" To="0.97" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <Border.Resources>
                                <core:MultiplyConverter x:Key="MultiplyConverter"/>
                                <Storyboard x:Name="ContentChangeStoryboard" x:Key="ContentChangeStoryboard" FillBehavior="Stop">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="previousContent" Storyboard.TargetProperty="Visibility"
                                                               Duration="0:0:0.15" FillBehavior="Stop">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="previousContent" Storyboard.TargetProperty="(RenderTransform).Y"
                                                 To="{Binding ElementName=root, Path=ActualHeight, Converter={StaticResource MultiplyConverter}, ConverterParameter=-1}"
                                                 Duration="0:0:0.15"/>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="(RenderTransform).Y"
                                                               Duration="0:0:1">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=root, Path=ActualHeight}"/>
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.15" Value="{Binding ElementName=root, Path=ActualHeight}"/>
                                        <LinearDoubleKeyFrame KeyTime="0:0:0.4" Value="20"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Border.Resources>
                            <Grid>
                                <!--<Rectangle Fill="{TemplateBinding CalculatedBackground}" />-->

                                <ContentPresenter Name="content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding CurrentContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform/>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                                <ContentPresenter Name="previousContent" Content="{TemplateBinding PreviousContent}" ContentTemplate="{TemplateBinding CurrentContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Collapsed">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform/>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                                <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          Visibility="{Binding CalculatedHeaderVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <!--<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />-->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </dxlc:Tile.Resources>
    <Grid>
            
    </Grid>
</dxlc:Tile>
